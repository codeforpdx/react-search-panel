{"version":3,"sources":["../../node_modules/react-cool-onclickoutside/dist/index.esm.js","../../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js","../../node_modules/use-latest/dist/use-latest.esm.js","../../node_modules/react-use-keypress/lib/index.esm.js","../../src/SearchPanel.tsx","App.tsx","index.tsx"],"names":["_slicedToArray","e","r","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","t","n","o","a","i","u","next","done","push","value","length","return","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_nonIterableSpread","prototype","toString","call","slice","constructor","name","test","hasIgnoreClass","target","classList","contains","parentElement","clickedOnScrollbar","document","documentElement","clientWidth","clientX","clientHeight","clientY","getEventOptions","includes","window","addEventListener","defineProperty","get","removeEventListener","canUsePassiveEvents","passive","index","ref","useIsomorphicLayoutEffect","current","aliases","Map","keys","handler","keysRef","handerRef","handleKeydown","event","has","key","shimKeyboardEvent","props","React","searchField","handlePressOutside","setIsExpanded","removeSelectedKey","updateKeys","handleCheckChanged","isNoneSelected","setSelectedKey","selectedKey","noChoiceItem","setSelectedKeys","onSelectionChange","handleSearchChange","onChange","choices","ChoiceItem","choice","choiceId","Math","inputType","className","styles","small","id","tabIndex","type","checked","selectedKeys","htmlFor","useEffect","clickOutsideRef","arguments","refs","disabled","eventTypes","excludeScrollbar","c","l","ignoreClass","s","f","d","y","v","b","m","concat","forEach","every","JSON","stringify","useOnclickOutside","useKeypress","onFocus","onBlur","isExpanded","shadow","focusable","xmlns","viewBox","autoCapitalize","autoComplete","autoCorrect","role","spellCheck","title","placeholder","isSelectionOptional","container","margin","maxWidth","padding","App","useState","input","setInput","setChoices","console","log","resultChoices","url","axios","response","data","result","show","description","search","style","isMultiSelect","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.aa184c4a.chunk.js","sourcesContent":["import{useRef,useState,useEffect,useCallback}from\"react\";function _slicedToArray(e,r){return _arrayWithHoles(e)||_iterableToArrayLimit(e,r)||_unsupportedIterableToArray(e,r)||_nonIterableRest()}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _iterableToArray(e){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _iterableToArrayLimit(e,r){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],n=!0,o=!1,a=void 0;try{for(var i,u=e[Symbol.iterator]();!(n=(i=u.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==u.return||u.return()}finally{if(o)throw a}}return t}}function _unsupportedIterableToArray(e,r){if(e){if(\"string\"==typeof e)return _arrayLikeToArray(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===t&&e.constructor&&(t=e.constructor.name),\"Map\"===t||\"Set\"===t?Array.from(e):\"Arguments\"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,r):void 0}}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var canUsePassiveEvents=function(){if(\"undefined\"==typeof window||\"function\"!=typeof window.addEventListener)return!1;var e=!1,r=Object.defineProperty({},\"passive\",{get:function(){e=!0}}),t=function(){return null};return window.addEventListener(\"test\",t,r),window.removeEventListener(\"test\",t,r),e},DEFAULT_IGNORE_CLASS=\"ignore-onclickoutside\",hasIgnoreClass=function(e,r){for(var t=e.target;t;){var n;if(null===(n=t.classList)||void 0===n?void 0:n.contains(r))return!0;t=t.parentElement}return!1},clickedOnScrollbar=function(e){return document.documentElement.clientWidth<=e.clientX||document.documentElement.clientHeight<=e.clientY},getEventOptions=function(e){return!(!e.includes(\"touch\")||!canUsePassiveEvents())&&{passive:!0}},useOnclickOutside=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=r.refs,n=r.disabled,o=void 0!==n&&n,a=r.eventTypes,i=void 0===a?[\"mousedown\",\"touchstart\"]:a,u=r.excludeScrollbar,c=void 0!==u&&u,l=r.ignoreClass,s=void 0===l?DEFAULT_IGNORE_CLASS:l,f=useRef(e),d=useState([]),y=_slicedToArray(d,2),v=y[0],b=y[1];useEffect((function(){f.current=e}),[e]);var m=useCallback((function(e){b((function(r){return[].concat(_toConsumableArray(r),[{current:e}])}))}),[]);return useEffect((function(){if((null==t?void 0:t.length)||v.length){var e=function(e){if(!hasIgnoreClass(e,s)){var r=[];(t||v).forEach((function(e){var t=e.current;t&&r.push(t)})),c&&clickedOnScrollbar(e)||r.length&&r.every((function(r){return!r.contains(e.target)}))&&f.current(e)}},r=function(){i.forEach((function(r){document.removeEventListener(r,e,getEventOptions(r))}))};if(!o)return i.forEach((function(r){document.addEventListener(r,e,getEventOptions(r))})),function(){r()};r()}}),[v,s,c,o,JSON.stringify(i)]),m};export default useOnclickOutside;export{DEFAULT_IGNORE_CLASS};\n","import { useLayoutEffect } from 'react';\n\nvar index =  useLayoutEffect ;\n\nexport default index;\n","import { useRef } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n\nvar useLatest = function useLatest(value) {\n  var ref = useRef(value);\n  useIsomorphicLayoutEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n};\n\nexport default useLatest;\n","import { useEffect } from 'react';\nimport useLatest from 'use-latest';\n\nvar castArray = function castArray(value) {\n  return Array.isArray(value) ? value : [value];\n};\n\n// Fixing inconsistencies from older browsers\n// https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\nvar aliases = new Map([['Win', 'Meta'], ['Scroll', 'ScrollLock'], ['Spacebar', ' '], ['Down', 'ArrowDown'], ['Left', 'ArrowLeft'], ['Right', 'ArrowRight'], ['Up', 'ArrowUp'], ['Del', 'Delete'], ['Crsel', 'CrSel'], ['Exsel', 'ExSel'], ['Apps', 'ContextMenu'], ['Esc', 'Escape'], ['Decimal', '.'], ['Multiply', '*'], ['Add', '+'], ['Subtract', '-'], ['Divide', '/']]);\n\nvar shimKeyboardEvent = function shimKeyboardEvent(event) {\n  if (aliases.has(event.key)) {\n    var key = aliases.get(event.key);\n    Object.defineProperty(event, 'key', {\n      get: function get() {\n        return key;\n      }\n    });\n  }\n};\n\nvar useKeypress = function useKeypress(keys, handler) {\n  var keysRef = useLatest(keys);\n  var handerRef = useLatest(handler);\n  useEffect(function () {\n    var handleKeydown = function handleKeydown(event) {\n      shimKeyboardEvent(event);\n\n      if (castArray(keysRef.current).includes(event.key)) {\n        handerRef.current(event);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n    return function () {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, []);\n};\n\nexport default useKeypress;\n","import React, { useEffect } from \"react\";\nimport styles from \"./styles.module.css\";\nimport useOnclickOutside from \"react-cool-onclickoutside\";\nimport useKeypress from \"react-use-keypress\";\n\n/**\n * Definition of a SearchPanelChoice\n */\nexport interface SearchPanelChoice {\n  key: string;\n  description: string;\n}\n\n/**\n * Definition of props for SearchPanel\n */\ninterface SearchPanelProps {\n\n  /**\n   * An array of choices to be displayed\n   */\n  choices: Array<SearchPanelChoice>,\n\n  /**\n   * By default choices are selected as radio buttons,\n   * with isMultiSelect={true} they are displayed as checkboxes.\n   */\n  isMultiSelect?: boolean,\n\n  /**\n   * Display a \"None\" option so you can deselect any previously selected choice(s).\n   */\n  isSelectionOptional?: boolean,\n  noChoiceItem?: SearchPanelChoice,\n  onChange: (event: React.ChangeEvent) => void,\n  onSelectionChange?: (selectedKeys: Array<string>) => void,\n  shadow?: boolean,\n  small?: boolean,\n  placeholder: string,\n  value: string,\n}\n\n/**\n * SearchPanel component\n * @param props\n */\nconst SearchPanel = (props: SearchPanelProps) => {\n  const {\n    choices,\n    isMultiSelect,\n    isSelectionOptional,\n    noChoiceItem,\n    onChange,\n    onSelectionChange,\n    placeholder,\n    shadow,\n    small,\n    value,\n  } = props;\n  const [isExpanded, setIsExpanded] = React.useState(false);\n  const [selectedKeys, setSelectedKeys] = React.useState<Array<string>>([]);\n  const fieldsetId: string = \"ChoiceGroup\";\n  const resultContainerId: string = \"ResultContainer\";\n  const searchField = React.useRef<HTMLInputElement>(null);\n\n  /**\n   * Handle event when user presses outside this component.\n   */\n  const handlePressOutside = () => {\n    if (searchField.current) {\n      searchField.current.blur();\n    }\n    setIsExpanded(false);\n  };\n\n  /**\n   * Handle event when component receives focus.\n   */\n  const handleOnFocus = () => {\n    if (choices.length) {\n      setIsExpanded(true);\n    }\n  };\n\n  /**\n   * Handle component blur event to find if the newly focused element\n   * is within the component or not. If not, collapse the search bar.\n   * @param event\n   */\n  // const handleOnBlur = (event: React.FormEvent) => {\n  const handleOnBlur = () => {\n    // const currentTarget = event.currentTarget;\n\n    // // Check the newly focused element in the next tick of the event loop\n    // setTimeout(() => {\n    //   // Check if the new activeElement is a child of the original container\n    //   if (!currentTarget.contains(document.activeElement)) {\n    //     // You can invoke a callback or add custom logic here\n    //     setIsExpanded(false);\n    //   }\n    // }, 0);\n  };\n\n  /**\n   * Remove a selected key\n   * @param key\n   * @param updateKeys\n   */\n  const removeSelectedKey = (key: string, updateKeys: Array<string>) => {\n    const index: number = updateKeys.indexOf(key);\n    if (index > -1) {\n      updateKeys.splice(index, 1);\n    }\n  };\n\n  /**\n   * Add a selected key, if not multi-select, remove any previous selected key.\n   * @param key\n   * @param updateKeys\n   */\n  const setSelectedKey = (key: string, updateKeys: Array<string>) => {\n    if (isMultiSelect) {\n      updateKeys.push(key);\n    }\n    else {\n      updateKeys.splice(0, updateKeys.length);\n      updateKeys.push(key);\n    }\n  };\n\n  /**\n   * Handle when an item is selected.\n   * Handle cases where item is single or multi select.\n   * @param event\n   * @param selectedKey\n   */\n  const handleCheckChanged = (event: React.ChangeEvent, selectedKey: string) => {\n    const target = event.target as HTMLInputElement;\n    let updateKeys = [...selectedKeys];\n    let isNoneSelected = false;\n\n    // Set selected key if checked, remove it otherwise.\n    if (target.checked) {\n      setSelectedKey(selectedKey, updateKeys);\n    }\n    else {\n      removeSelectedKey(selectedKey, updateKeys);\n    }\n\n    // Handle the \"None\" option\n    if (isSelectionOptional) {\n      // If the \"None\" option was selected, make it the only selected item.\n      if (noChoiceItem && selectedKey === noChoiceItem.key) {\n        if (target.checked) {\n          updateKeys = [selectedKey];\n          // Special case for \"None\" option, consumer should get an empty array\n          // while the \"None\" option is checked on screen.\n          isNoneSelected = true;\n        }\n      }\n      // If any other item was selected, uncheck the \"None\" item\n      else {\n        if (noChoiceItem) {\n          removeSelectedKey(noChoiceItem.key, updateKeys);\n        }\n      }\n    }\n    // Set state\n    setSelectedKeys(updateKeys);\n\n    // Notify the consumer of the currently selected keys\n    if (onSelectionChange) {\n      if (isNoneSelected) {\n        onSelectionChange([]);\n      }\n      else {\n        onSelectionChange(updateKeys);\n      }\n    }\n  };\n\n  /**\n   * Handle changing search input\n   * @param event\n   */\n  const handleSearchChange = async (event: React.ChangeEvent) => {\n    await onChange(event);\n    if (choices.length) {\n      setIsExpanded(true);\n    }\n  };\n\n  /**\n   * Definition of ChoiceItem properties\n   */\n  interface ChoiceItemProps {\n    choice: SearchPanelChoice,\n  }\n\n  /**\n   * Definition of ChoiceItem, radio or checkbox input.\n   * @param param0\n   */\n  const ChoiceItem = ({ choice }: ChoiceItemProps) => {\n    const choiceId = `choice_${choice.key}_${Math.random()}`;\n    let inputType: string = \"radio\";\n    if (isMultiSelect) {\n      inputType = \"checkbox\";\n    }\n    return (\n      <div className={`${styles.resultItem} ${small ? styles.small : \"\"}`}>\n        <input\n          id={choiceId}\n          name={fieldsetId}\n          tabIndex={0}\n          type={inputType}\n          onChange={(event) => handleCheckChanged(event, choice.key)}\n          value={choice.key}\n          checked={selectedKeys.indexOf(choice.key) > -1}\n        />\n        <label htmlFor={choiceId} className={styles.resultItemLabel}>\n          {choice.description}\n        </label>\n      </div>\n    );\n  };\n\n  /**\n   * When choices change, clear out previously selected keys\n   */\n  useEffect(() => {\n    setSelectedKeys([]);\n  }, [choices]);\n\n  const clickOutsideRef = useOnclickOutside(handlePressOutside);\n  useKeypress(\"Escape\", handlePressOutside);\n\n  return (\n    <form\n      className={`\n        ${styles.topContainer}\n        ${small ? styles.small : \"\"}\n      `}\n      ref={clickOutsideRef}\n      onFocus={handleOnFocus}\n      onBlur={handleOnBlur}\n    >\n      <div\n        className={`\n            ${styles.searchContainer}\n            ${isExpanded ? styles.searchContainerExpanded : \"\"}\n            ${isExpanded && shadow ? styles.searchContainerExpandedShadow : \"\"}\n            ${small ? styles.small : \"\"}\n            ${shadow ? styles.searchContainerShadow : \"\"}\n          `}\n      >\n        <div className={styles.flexContainer}>\n          <div className={styles.searchIconContainer}>\n            <span className={styles.searchIcon}>\n              <svg\n                focusable=\"false\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n              </svg>\n            </span>\n          </div>\n          <div className={styles.inputContainer}>\n            <div className={styles.inputFieldContainer} />\n            <input\n              ref={searchField}\n              className={`${styles.inputField} ${small ? styles.small : \"\"}`}\n              type=\"text\"\n              aria-autocomplete=\"both\"\n              aria-haspopup=\"false\"\n              autoCapitalize=\"off\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              role=\"combobox\"\n              spellCheck=\"false\"\n              title={placeholder}\n              aria-label={placeholder}\n              aria-controls={resultContainerId}\n              aria-expanded={isExpanded}\n              placeholder={placeholder}\n              onChange={handleSearchChange}\n              value={value}\n            />\n          </div>\n        </div>\n      </div>\n      {isExpanded && (\n        <div\n          id={resultContainerId}\n          className={styles.resultContainer}\n        >\n          <fieldset\n            id={fieldsetId}\n            className={`\n            ${styles.resultListContainer}\n            ${shadow ? styles.resultListContainerExpandedShadow : \"\"}\n            ${small ? styles.small : \"\"}\n          `}\n          >\n            <div className={styles.resultSeperator} />\n            <ul className={styles.resultList} role=\"listbox\">\n              {isSelectionOptional && noChoiceItem && (\n                <li\n                  key={noChoiceItem.key}\n                  className={styles.resultListItem}\n                  role=\"presentation\"\n                >\n                  <ChoiceItem choice={noChoiceItem} />\n                </li>\n              )}\n              {choices.map((choice) => (\n                <li\n                  key={choice.key}\n                  className={styles.resultListItem}\n                  role=\"presentation\"\n                >\n                  <ChoiceItem choice={choice} />\n                </li>\n              ))}\n            </ul>\n          </fieldset>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default SearchPanel;\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport SearchPanel, { SearchPanelChoice } from \"react-search-panel\";\nimport \"react-search-panel/dist/index.css\";\n\n/**\n * Page styles\n */\nconst styles = {\n  container: {\n    margin: \"auto\",\n    maxWidth: \"650px\",\n    padding: \"40px\",\n  },\n};\n\n/**\n * API URL\n */\nconst baseUrl = \"http://api.tvmaze.com/search/shows?q=\";\n\n/**\n * Minimum character count before calling API\n */\nconst MIN_INPUT = 3;\n\n/**\n * Definition of a Show from tvmaze API\n * @interface Show\n */\ninterface Show {\n  id: string;\n  name: string;\n}\n\n/**\n * Definition of a Result from tvmaze API\n * @interface Result\n */\nexport interface Result {\n  score: number;\n  show: Show;\n}\n\n/**\n * A demo application\n * @returns\n */\nconst App = () => {\n  const [input, setInput] = React.useState(\"\");\n  const [choices, setChoices] = React.useState<Array<SearchPanelChoice>>([]);\n\n  /**\n   * Handle change in search input.\n   * @param event\n   */\n  const handleSearchChange = (event: React.ChangeEvent) => {\n    const target = event.target as HTMLInputElement;\n    setInput(target.value);\n  };\n\n  /**\n   * Perform a search when input changes.\n   */\n  useEffect(() => {\n    const search = async () => {\n      console.log(\"Search: \" + input);\n      const resultChoices: Array<SearchPanelChoice> = [];\n\n      // Only perform a search if end user has typed a minimum number of characters\n      if (input.length >= MIN_INPUT) {\n        const url = `${baseUrl}${input}`;\n        const response = await axios(url);\n        const results = await response.data;\n\n        // Transform results to choices.\n        results.forEach((result: Result) => {\n          const choice = { key: result.show.id, description: result.show.name };\n          resultChoices.push(choice);\n        });\n      }\n      setChoices(resultChoices);\n    };\n    search();\n  }, [input]);\n\n  return (\n    <div style={styles.container}>\n      <h1>A demonstration of react-search-panel</h1>\n      <p>\n        This is a demonstration of react-search-panel:\n      </p>\n      <div>\n        <SearchPanel\n          choices={choices}\n          isMultiSelect\n          isSelectionOptional\n          onChange={handleSearchChange}\n          placeholder=\"Search TV shows\"\n          small\n          value={input}\n        />\n      </div>\n      <p>\n        This demonstration searches for TV shows when you type at least {MIN_INPUT} characters.\n        It uses the public <a href=\"http://www.tvmaze.com/api#show-search\">TVMAZE API</a>.\n      </p>\n    </div>\n  );\n};\n\nexport default App;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}